classDiagram
    class LogTraceConfig {
        +LogTrace logTrace()
    }
    
    class LogTrace {
        <<interface>>
        +TraceStatus begin(String message)
        +void end(TraceStatus status)
        +void exception(TraceStatus status, Exception e)
    }
    
    class ThreadLocalLogTrace {
        -TraceId traceIdHolder
        +TraceStatus begin(String message)
        +void end(TraceStatus status)
        +void exception(TraceStatus status, Exception e)
    }
    
    class TraceTemplate {
        -LogTrace trace
        +TraceTemplate(LogTrace trace)
        +~T execute(String message, TraceCallback~T~ callback)
    }
    
    class OrderControllerV5 {
        -OrderServiceV5 orderService
        -TraceTemplate template
        +OrderControllerV5(OrderServiceV5 orderService, LogTrace trace)
    }
    
    class OrderServiceV5 {
        -OrderRepositoryV5 orderRepository
        -TraceTemplate template
        +OrderServiceV5(OrderRepositoryV5 orderRepository, LogTrace trace)
    }
    
    class OrderRepositoryV5 {
        -TraceTemplate template
        +OrderRepositoryV5(LogTrace trace)
    }
    
    LogTraceConfig ..> ThreadLocalLogTrace : 생성
    ThreadLocalLogTrace ..|> LogTrace : 구현
    
    OrderControllerV5 --> TraceTemplate : 생성 및 초기화
    OrderServiceV5 --> TraceTemplate : 생성 및 초기화
    OrderRepositoryV5 --> TraceTemplate : 생성 및 초기화
    
    OrderControllerV5 --> OrderServiceV5 : 주입
    OrderServiceV5 --> OrderRepositoryV5 : 주입
    
    TraceTemplate --> LogTrace : 의존
    
    note for LogTraceConfig "스프링 빈으로 LogTrace 등록"
    note for OrderControllerV5 "template = new TraceTemplate(trace)"
    note for OrderServiceV5 "template = new TraceTemplate(trace)"
    note for OrderRepositoryV5 "template = new TraceTemplate(trace)"